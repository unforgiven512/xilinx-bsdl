
-- $ XILINX$RCSfile: xc2c32_1532.bsd,v $
-- $ XILINX$1 6.6 $
--
-- BSDL file for device xc2c32_1532, package cp56
-- Xilinx, Inc.  State: PRELIMINARY    Aug_21_2006 Aug_21_2006 13:16:31-08  
-- Generated by createBSDL_br 2.2c
--
-- Unzip these BSDL files into your %xilinx%/xbr/data directory,
-- overwriting all files."

-- =================================================
-- North American Support
-- (Mon,Tues,Wed,Fri 6:30am-5pm
-- Thr 6:30am - 4:00pm Pacific Standard Time)
-- Hotline: 1-800-255-7778
-- or (408) 879-5199
-- Fax: (408) 879-4442
-- Email: hotline@xilinx.com

-- United Kingdom Support
-- (Mon-Fri 08:00 to 17:30 GMT)
-- Hotline: +44 870 7350 610
-- Fax: +44 870 7350 620
-- Email : eurosupport@xilinx.com
-- 
-- France Support
-- (Mon-Fri 08:00 to 17:30 GMT)
-- Hotline: +33 1 3463 0100
-- Fax: +44 870 7350 620
-- Email : eurosupport@xilinx.com
-- 
-- Germany Support
-- (Mon-Fri 08:00 to 17:30 GMT)
-- Hotline: +49 180 3 60 60 60
-- Fax: +44 870 7350 620
-- Email : eurosupport@xilinx.com

-- Sweden Support
-- (Mon-Fri 08:00 to 17:30 GMT)
-- Hotline: +46 8 33 14 00
-- Fax: +44 870 7350 620
-- Email : eurosupport@xilinx.com
--
-- Japan Support
-- (Mon,Tues,Thu,Fri  9:00am -5:00pm ()
-- Wed    9:00am -4:00pm)
-- Hotline: (81)3-3297-9163
-- Fax:: (81)3-3297-0067
-- Email: jhotline@xilinx.com
-- =================================================
-- 
------------------------------------------------------------------------
-- | Generated on 05/01/08
-- | CR # 471888
-- | Details - Removed _1532 from entity name in all 1532 type files.
-- |           Added USERCODE_REGISTER & changed CONTROL safe bit to 0.
------------------------------------------------------------------------

entity xc2c32 is

generic (PHYSICAL_PIN_MAP : string := "UNDEFINED");
port  ( tdi	:	in bit;
 tck	:	in bit;
 tms	:	in bit;
 tdo	:	out bit;
 IN_16	:	in bit;
 IO_0	:	inout bit;
 IO_1	:	inout bit;
 IO_2	:	inout bit;
 IO_3	:	inout bit;
 IO_4	:	inout bit;
 IO_5	:	inout bit;
 IO_6	:	inout bit;
 IO_7	:	inout bit;
 IO_8	:	inout bit;
 IO_9	:	inout bit;
 IO_10	:	inout bit;
 IO_11	:	inout bit;
 IO_12	:	inout bit;
 IO_13	:	inout bit;
 IO_14	:	inout bit;
 IO_15	:	inout bit;
 IO_17	:	inout bit;
 IO_18	:	inout bit;
 IO_19	:	inout bit;
 IO_20	:	inout bit;
 IO_21	:	inout bit;
 IO_22	:	inout bit;
 IO_23	:	inout bit;
 IO_24	:	inout bit;
 IO_25	:	inout bit;
 IO_26	:	inout bit;
 IO_27	:	inout bit;
 IO_28	:	inout bit;
 IO_29	:	inout bit;
 IO_30	:	inout bit;
  IO_31	:	inout bit;
   IO_32	:	inout bit);
use std_1149_1_1994.all;

use STD_1532_2001.all;

attribute COMPONENT_CONFORMANCE of xc2c32 : entity is "std_1149_1_1993";
attribute PIN_MAP of xc2c32 : entity is	PHYSICAL_PIN_MAP;
constant UNDEFINED : PIN_MAP_STRING :=
	" tdi:J10,  tck:K10,  tms:K9,  tdo:A6,IN_16:E8," &
	" IO_0:F1,  IO_1:E3,  IO_2:E1,  IO_3:D1,  IO_4:C1," &
	" IO_5:A3,  IO_6:A2,  IO_7:B1,  IO_8:A1,  IO_9:C4," &
	" IO_10:C5,  IO_11:A7,  IO_12:C8,  IO_13:A9,  IO_14:A10," &
	" IO_15:C10,  IO_17:G1,  IO_18:F3,  IO_19:H1,  IO_20:G3," &
	" IO_21:J1,  IO_22:K1,  IO_23:K2,  IO_24:K3,  IO_25:H3," &
	" IO_26:K5,  IO_27:H5,  IO_28:H8,  IO_29:K8,  IO_30:H10," &
	" IO_31:G10,  IO_32:F10";
attribute TAP_SCAN_IN    of tdi : signal is true;
attribute TAP_SCAN_CLOCK of tck : signal is (33.0e6, both);
attribute TAP_SCAN_MODE  of tms : signal is true;
attribute TAP_SCAN_OUT   of tdo : signal is true;
attribute INSTRUCTION_LENGTH of xc2c32 : entity is 8;
attribute INSTRUCTION_OPCODE of xc2c32 : entity is

      "INTEST         (00000010)," &
      "BYPASS         (11111111)," &
      "SAMPLE         (00000011)," &
      "EXTEST         (00000000)," &
      "IDCODE         (00000001)," &
      "USERCODE       (11111101)," &
      "HIGHZ          (11111100)," &
      "ISC_ENABLE_CLAMP (11101001)," &
      "ISC_ENABLE_OTF  (11100100)," &
      "ISC_ENABLE     (11101000)," &
      "ISC_SRAM_READ  (11100111)," &
      "ISC_WRITE (11100110)," &
      "ISC_ERASE      (11101101)," &
      "ISC_PROGRAM    (11101010)," &
      "ISC_READ       (11101110)," &
      "ISC_INIT       (11110000)," &
      "ISC_DISABLE    (11000000)," &
      "TEST_ENABLE    (00010001)," &
      "BULKPROG       (00010010)," &
      "ERASE_ALL      (00010100)," &
      "MVERIFY        (00010011)," &
      "TEST_DISABLE   (00010101)," &
 --     "STCTEST        (00010110)," &
      "ISC_NOOP       (11100000)";
 

attribute INSTRUCTION_CAPTURE of xc2c32 : entity is "XXXXXX01" ;
attribute IDCODE_REGISTER of xc2c32 : entity is "XXXX011011X000011XXX000010010011";
attribute USERCODE_REGISTER of xc2c32 : entity is "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
attribute REGISTER_ACCESS of xc2c32 : entity is

     "BYPASS         (BYPASS)," &
     "BYPASS         (HIGHZ)," &
     "BOUNDARY       (SAMPLE)," &
     "BOUNDARY       (EXTEST)," &
     "BOUNDARY       (INTEST)," &
     "DATAREG[266]   (ISC_ENABLE_OTF)," &
     "DATAREG[266]   (ISC_ENABLE)," &
     "DATAREG[266]   (ISC_SRAM_READ)," &
     "DATAREG[266]   (ISC_WRITE)," &
     "DATAREG[266]   (ISC_ERASE)," &
     "DATAREG[266]   (ISC_PROGRAM)," &
     "DATAREG[266]   (ISC_READ)," &
     "DATAREG[266]   (ISC_INIT)," &
     "DATAREG[266]   (ISC_DISABLE)," &
     "DATAREG[266]   (TEST_ENABLE)," &
     "DATAREG[266]   (BULKPROG)," &
     "DATAREG[266]   (ERASE_ALL)," &
     "DATAREG[266]   (MVERIFY)," &
     "DATAREG[266]   (TEST_DISABLE)," &
--     "STC[]       (STCTEST)," &
     "ISC_DEFAULT[1]    (ISC_NOOP)," &
     "DEVICE_ID      (IDCODE, USERCODE)," &
     "ISC_DEFAULT[1]    (ISC_ENABLE_CLAMP)";
      

attribute BOUNDARY_LENGTH of xc2c32 : entity is 97;
attribute BOUNDARY_REGISTER of xc2c32 : entity is 

--
--   num       cell      port       function  safe     [ccell     disval    rslt]
--

     "  96   (BC_1,	IO_0,	    INPUT,    X)," &
     "  95   (BC_1,	IO_0,	    OUTPUT3,  X,	  94,	  0,Z),"&
     "  94   (BC_1,	 *,	    CONTROL,  0)," &
     "  93   (BC_1,	IO_1,	    INPUT,    X)," &
     "  92   (BC_1,	IO_1,	    OUTPUT3,  X,	  91,	  0,Z),"&
     "  91   (BC_1,	 *,	    CONTROL,  0)," &
     "  90   (BC_1,	IO_2,	    INPUT,    X)," &
     "  89   (BC_1,	IO_2,	    OUTPUT3,  X,	  88,	  0,Z),"&
     "  88   (BC_1,	 *,	    CONTROL,  0)," &
     "  87   (BC_1,	IO_3,	    INPUT,    X)," &
     "  86   (BC_1,	IO_3,	    OUTPUT3,  X,	  85,	  0,Z),"&
     "  85   (BC_1,	 *,	    CONTROL,  0)," &
     "  84   (BC_1,	IO_4,	    INPUT,    X)," &
     "  83   (BC_1,	IO_4,	    OUTPUT3,  X,	  82,	  0,Z),"&
     "  82   (BC_1,	 *,	    CONTROL,  0)," &
     "  81   (BC_1,	IO_5,	    INPUT,    X)," &
     "  80   (BC_1,	IO_5,	    OUTPUT3,  X,	  79,	  0,Z),"&
     "  79   (BC_1,	 *,	    CONTROL,  0)," &
     "  78   (BC_1,	IO_6,	    INPUT,    X)," &
     "  77   (BC_1,	IO_6,	    OUTPUT3,  X,	  76,	  0,Z),"&
     "  76   (BC_1,	 *,	    CONTROL,  0)," &
     "  75   (BC_1,	IO_7,	    INPUT,    X)," &
     "  74   (BC_1,	IO_7,	    OUTPUT3,  X,	  73,	  0,Z),"&
     "  73   (BC_1,	 *,	    CONTROL,  0)," &
     "  72   (BC_1,	IO_8,	    INPUT,    X)," &
     "  71   (BC_1,	IO_8,	    OUTPUT3,  X,	  70,	  0,Z),"&
     "  70   (BC_1,	 *,	    CONTROL,  0)," &
     "  69   (BC_1,	IO_9,	    INPUT,    X)," &
     "  68   (BC_1,	IO_9,	    OUTPUT3,  X,	  67,	  0,Z),"&
     "  67   (BC_1,	 *,	    CONTROL,  0)," &
     "  66   (BC_1,	IO_10,	    INPUT,    X)," &
     "  65   (BC_1,	IO_10,	    OUTPUT3,  X,	  64,	  0,Z),"&
     "  64   (BC_1,	 *,	    CONTROL,  0)," &
     "  63   (BC_1,	IO_11,	    INPUT,    X)," &
     "  62   (BC_1,	IO_11,	    OUTPUT3,  X,	  61,	  0,Z),"&
     "  61   (BC_1,	 *,	    CONTROL,  0)," &
     "  60   (BC_1,	IO_12,	    INPUT,    X)," &
     "  59   (BC_1,	IO_12,	    OUTPUT3,  X,	  58,	  0,Z),"&
     "  58   (BC_1,	 *,	    CONTROL,  0)," &
     "  57   (BC_1,	IO_13,	    INPUT,    X)," &
     "  56   (BC_1,	IO_13,	    OUTPUT3,  X,	  55,	  0,Z),"&
     "  55   (BC_1,	 *,	    CONTROL,  0)," &
     "  54   (BC_1,	IO_14,	    INPUT,    X)," &
     "  53   (BC_1,	IO_14,	    OUTPUT3,  X,	  52,	  0,Z),"&
     "  52   (BC_1,	 *,	    CONTROL,  0)," &
     "  51   (BC_1,	IO_15,	    INPUT,    X)," &
     "  50   (BC_1,	IO_15,	    OUTPUT3,  X,	  49,	  0,Z),"&
     "  49   (BC_1,	 *,	    CONTROL,  0)," &
     "  48   (BC_1,	IO_17,	    INPUT,    X)," &
     "  47   (BC_1,	IO_17,	    OUTPUT3,  X,	  46,	  0,Z),"&
     "  46   (BC_1,	 *,	    CONTROL,  0)," &
     "  45   (BC_1,	IO_18,	    INPUT,    X)," &
     "  44   (BC_1,	IO_18,	    OUTPUT3,  X,	  43,	  0,Z),"&
     "  43   (BC_1,	 *,	    CONTROL,  0)," &
     "  42   (BC_1,	IO_19,	    INPUT,    X)," &
     "  41   (BC_1,	IO_19,	    OUTPUT3,  X,	  40,	  0,Z),"&
     "  40   (BC_1,	 *,	    CONTROL,  0)," &
     "  39   (BC_1,	IO_20,	    INPUT,    X)," &
     "  38   (BC_1,	IO_20,	    OUTPUT3,  X,	  37,	  0,Z),"&
     "  37   (BC_1,	 *,	    CONTROL,  0)," &
     "  36   (BC_1,	IO_21,	    INPUT,    X)," &
     "  35   (BC_1,	IO_21,	    OUTPUT3,  X,	  34,	  0,Z),"&
     "  34   (BC_1,	 *,	    CONTROL,  0)," &
     "  33   (BC_1,	IO_22,	    INPUT,    X)," &
     "  32   (BC_1,	IO_22,	    OUTPUT3,  X,	  31,	  0,Z),"&
     "  31   (BC_1,	 *,	    CONTROL,  0)," &
     "  30   (BC_1,	IO_23,	    INPUT,    X)," &
     "  29   (BC_1,	IO_23,	    OUTPUT3,  X,	  28,	  0,Z),"&
     "  28   (BC_1,	 *,	    CONTROL,  0)," &
     "  27   (BC_1,	IO_24,	    INPUT,    X)," &
     "  26   (BC_1,	IO_24,	    OUTPUT3,  X,	  25,	  0,Z),"&
     "  25   (BC_1,	 *,	    CONTROL,  0)," &
     "  24   (BC_1,	IO_25,	    INPUT,    X)," &
     "  23   (BC_1,	IO_25,	    OUTPUT3,  X,	  22,	  0,Z),"&
     "  22   (BC_1,	 *,	    CONTROL,  0)," &
     "  21   (BC_1,	IO_26,	    INPUT,    X)," &
     "  20   (BC_1,	IO_26,	    OUTPUT3,  X,	  19,	  0,Z),"&
     "  19   (BC_1,	 *,	    CONTROL,  0)," &
     "  18   (BC_1,	IO_27,	    INPUT,    X)," &
     "  17   (BC_1,	IO_27,	    OUTPUT3,  X,	  16,	  0,Z),"&
     "  16   (BC_1,	 *,	    CONTROL,  0)," &
     "  15   (BC_1,	IO_28,	    INPUT,    X)," &
     "  14   (BC_1,	IO_28,	    OUTPUT3,  X,	  13,	  0,Z),"&
     "  13   (BC_1,	 *,	    CONTROL,  0)," &
     "  12   (BC_1,	IO_29,	    INPUT,    X)," &
     "  11   (BC_1,	IO_29,	    OUTPUT3,  X,	  10,	  0,Z),"&
     "  10   (BC_1,	 *,	    CONTROL,  0)," &
     "   9   (BC_1,	IO_30,	    INPUT,    X)," &
     "   8   (BC_1,	IO_30,	    OUTPUT3,  X,	   7,	  0,Z),"&
     "   7   (BC_1,	 *,	    CONTROL,  0)," &
     "   6   (BC_1,	IO_31,	    INPUT,    X)," &
     "   5   (BC_1,	IO_31,	    OUTPUT3,  X,	   4,	  0,Z),"&
     "   4   (BC_1,	 *,	    CONTROL,  0)," &
     "   3   (BC_1,	IO_32,	    INPUT,    X)," &
     "   2   (BC_1,	IO_32,	    OUTPUT3,  X,	   1,	  0,Z),"&
     "   1   (BC_1,	 *,	    CONTROL,  0)," &
     "   0   (BC_1,       IN_16,    INPUT,    X)";


-- Following atribute is specific only to ISC_ENABLE Instruction 
attribute ISC_PIN_BEHAVIOR of xc2c32 : entity is "HIGHZ";

-- If ISC_ENABLE_CLAMP is executed instead of ISC_ENABLE, previous attribute 
-- should be replaced with (clamp value depends on the preconditioning)
-- attribute ISC_PIN_BEHAVIOR of xa2c384 : entity is "CLAMP"

-- If ISC_ENABLEOTF is executed instead of ISC_ENABLE, all device pins will
-- behave as previously programmed and would therefore be all indicated as
-- fixed system pins.  You should uncomment the following attribute:

attribute ISC_STATUS of xc2c32 : entity is  "NOT IMPLEMENTED";
 
attribute ISC_BLANK_USERCODE of xc2c32 : entity is  "11111111111111111111111111111111";

--attribute ISC_SECURITY of xc2c32  : entity is  "ISC_DISABLE_READ *";

attribute ISC_FLOW of  xc2c32 : entity is
---------------------------------
-- program device
 "flow_program(array)" &
 "initialize"          &
         "(ISC_PROGRAM   6:?,260:? wait 10.0e-3)" &
 "Repeat 47 "&
         "(ISC_PROGRAM   6:?,260:? wait 10.0e-3)," &
---------------------------------
-- program done bits   
   "flow_program_donebit " &
   "initialize"          &
        "(ISC_PROGRAM  6:05, 12:FFB, 248:0 wait tck 10000 )," &
---------------------------------
 -- verify device
  "flow_verify(array) " &
 "initialize " &
           "(ISC_READ   6:?, 260:0  wait tck 1 6:0*0, 260:?)" & 
 "Repeat 47 "& 
           "(ISC_READ   6:?, 260:0  wait tck 1 6:0*0, 260:?)," & 
---------------------------------
 -- read device
 "flow_read(array) " &
 "initialize " &
         "(ISC_SRAM_READ  6:?, 260:0 wait tck 1 6:0*0, 260:? )" &
 " Repeat 47 "&
         "(ISC_SRAM_READ  6:?, 260:0 wait tck 1 6:0*0, 260:?)," &
---------------------------------

 -- program SRAM
 "flow_sram_write(array) " &
 "initialize " &
         "(ISC_WRITE   6:?, 260:? wait 10.0e-3)" &
 " Repeat 47 "&
         "(ISC_WRITE   6:?, 260:? wait 10.0e-3)," &
---------------------------------
 -- verify IDCODE
 "flow_verify(idcode)    " &
 "initialize             " &
         "(IDCODE        wait tck 1 32:06c18093*0FDF8FFF), " &
 ---------------------------------
 -- read IDCODE
 "flow_read(idcode)    " &
 "initialize             " &
         "(IDCODE        wait tck 1 32:!), " &
---------------------------------

 -- verify USERCODE blank device
 "flow_verify(usercode)  " &
 "initialize             " &
         "(USERCODE      wait tck 1 32:FFFFFFFF), " &
---------------------------------
 -- read USERCODE blank device
 "flow_read(usercode)  " &
 "initialize             " &
         "(USERCODE      wait tck 1 32:!), " &
---------------------------------
 -- erase device
 "flow_erase     " &
 "initialize             " &
         "(ISC_ERASE  266:0            wait 100.0e-3) " &
         "(ISC_INIT               wait 20.0e-6) " &
         "(ISC_INIT   266:0         wait 200.0e-6), " &
---------------------------------
 -- erase verify
 "flow_erase_verify  " &
 "initialize             " &                               
         "(ISC_SRAM_READ    6:$addr=0,260:0 wait tck 1 6:0*0, 260:F*F ) " &
 " Repeat 47 "&
         "(ISC_SRAM_READ    6:$addr+1,260:0 wait tck 1 6:0*0, 260:F*F ), " &
---------------------------------			
-- ISC MODE can be enabled with any of the following three flows
-- enable ISC mode (outputs are HIGHZ)
 "flow_enable_highz              " &
 "initialize             " &
         "(ISC_ENABLE    wait tck 1), " &

 -- enable ISC mode (outputs are CLAMP)
 "flow_enable_clamp              " &
 "initialize             " &
         "(ISC_ENABLE_CLAMP      wait tck 1), " &

 -- enable ISC mode (outputs are ACTIVE)
 "flow_enable_active             " &
 "initialize             " &
         "(ISC_ENABLE_OTF         wait tck 1), " &
---------------------------------
 -- load bypass instruction 
 "flow_bypass            " &
 "initialize             " &
         "(BYPASS         wait tck 1), " &
---------------------------------
 -- disable ISC mode (disables all three ISC modes)
 "flow_disable           " &
 "initialize             " &
         "(ISC_DISABLE           wait tck 100), " &
---------------------------------
 -- reinitialize device
 "flow_reinit    " &
 "initialize     " &
         "(ISC_INIT      	   wait TCK 20) " &
         "(ISC_INIT   266:0   wait TCK 100 )  " ;
---------------------------------
 attribute ISC_PROCEDURE         of xc2c32 : entity is
                 "proc_verify(idcode)    	= (flow_verify(idcode)), " &
                 "proc_read(idcode)      	= (flow_read(idcode)), " &                 
                 "proc_verify(usercode)  	= (flow_verify(usercode)), " &                 
                 "proc_read(array)       	= (flow_read(array))," &
                 "proc_verify(array)     	= (flow_verify(array)), " &                 
                 "proc_enable            	= (flow_enable_highz), "&
                 "proc_disable           	= (flow_disable), "&                 
                 "proc_bypass           	= (flow_bypass), "&                 
                 "proc_reinit             = (flow_reinit), "&   
                 "proc_program(array)    	= (flow_program(array),flow_program_donebit), "&                 
                 "proc_erase             	= (flow_erase), " &
                 "proc_blank_check       	= (flow_erase_verify), " &
                 "proc_write(array)  = (flow_sram_write(array)), " &
                 "proc_enable_clamp       = (flow_enable_clamp), "&
                 "proc_enable_active      = (flow_enable_active), "&
                 "proc_error_exit         = (flow_disable), "&
                 "proc_program_done       	= (flow_disable), "&
                 "proc_isc_exit          = (flow_disable)";

 attribute ISC_ACTION            of xc2c32 : entity is
 "erase          = (proc_verify(idcode) recommended, " &
 "                  proc_enable, " &
 "                  proc_erase, " &
 "                  proc_blank_check optional, " &
 "                  proc_reinit, " &
 "                  proc_disable), " &
 "program        = (proc_verify(idcode) recommended, " &
 "                  proc_enable, " &
 "                  proc_erase, " &
 "                  proc_blank_check optional, " &
 "                  proc_program(array), " &
 "                  proc_verify(array) optional, " &
 "                  proc_reinit, " &
 "                  proc_disable), " &

-- When using program_clamp the PIN_BEHAVIOR is CLAMP
 "program_clamp  = (proc_verify(idcode) recommended, " &
 "                  proc_enable_clamp, " &
 "                  proc_erase, " &
 "                  proc_blank_check optional, " &
 "                  proc_program(array), " &
 "                  proc_verify(array) optional, " &
 "                  proc_reinit, " &
 "                  proc_disable), " &

-- When using program_active all IOs behave as fixed pins
 "program_active = (proc_verify(idcode) recommended, " &
 "                  proc_enable_active, " &
 "                  proc_write(array), " &
 "                  proc_reinit, " &
 "                  proc_disable), " &
 
 "verify         = (proc_verify(idcode) recommended, " &
 "                  proc_enable, " &
 "                  proc_verify(array), " &
 "                  proc_reinit, " &
 "                  proc_disable), " &
 "read           = (proc_verify(idcode) recommended, " &
 "                  proc_enable, " &
 "                  proc_read(array), " &
 "                  proc_reinit, " &
 "                  proc_disable), "&
 "write          = (proc_verify(idcode) recommended, " &
 "                  proc_enable, " &
 "                  proc_write(array), " &
 "                  proc_read(array) recommended, " &
 "                  proc_disable), "&
 "verify(idcode) = (proc_verify(idcode))," &
 "read(idcode)   = (proc_read(idcode))";
 
 attribute ISC_DESIGN_WARNING of xc2c32: entity is
        "This BSDL file was verified to be correct on 6/21/05                      " &
        "There are some early datecode CRII devices which are not 1532-std compl.  " &
        "When using the ACTION: program_clamp, the PIN_BEHAVIOR is CLAMP.          " &
	"For correctness, the BSDL should be modified to indicate this.            " &
        "When using the ACTION: program_active, the pins behave as previously      " & 
 	"programmed.  This makes all device IO's effectively behave as fixed pins. " & 
 	"_________________________________________________________________________ " &    
 	"If ISC_ENABLE_CLAMP is executed instead of ISC_ENABLE, previous attribute " & 
 	"should be replaced with (clamp value depends on the preconditioning)      " & 
 	"  attribute ISC_PIN_BEHAVIOR of xc2c32 : entity is q_CLAMP_q           " & 
	"_________________________________________________________________________ " &
	"If ISC_ENABLEOTF is executed instead of ISC_ENABLE, all device pins will  " & 
	"behave as previously programmed and would therefore be all indicated as   " & 
	"fixed system pins.  You should uncomment the following attribute:         " & 
	"                                                                          " &
	"   attribute ISC_FIXED_SYSTEM_PINS of xc2c32 : entity is              " & 
	" ,IN_16,IO_0,IO_1,IO_2,IO_3,IO_4,IO_5,IO_6,IO_7,IO_8,IO_9," &
	" IO_10,IO_11,IO_12,IO_13,IO_14,IO_15,IO_17,IO_18,IO_19,IO_20,IO_21,IO_22,IO_23,IO_24,IO_25," &
	" IO_26,IO_27,IO_28,IO_29,IO_30,IO_31IO_32,IN_16,IO_0,IO_5,IO_10,IO_15,IO_21,IO_26,IO_31semicolon                      ";


end xc2c32;

